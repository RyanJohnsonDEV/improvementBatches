import './App.css';
import Header from './components/UI/Header';
import BeatmapCollection from './components/Beatmap/BeatmapCollection';
import { useState, useEffect } from 'react';

// TODO:
// more map overlay elements: view beatmap page, mark map as cleared/store in local storage, and add "(#/# completed)" to title

const maps = [
  [
    0,
    [
      [575053, 1265675],
      [690530, 1783630],
      [187154, 467177],
      [318207, 736928],
      [847807, 1773715],
      [913114, 1973385],
      [1161093, 2559252],
      [666169, 1496423],
      [692910, 1476082],
      [962923, 2016270],
      [1128593, 2361142],
      [474900, 1014633],
      [622946, 1313122],
      [1094412, 2534430],
    ],
  ],
  [
    1,
    [
      [621593, 1324828],
      [934974, 2071816],
      [349432, 770550],
      [200945, 476042],
      [1319284, 2732996],
      [409152, 947957],
      [988760, 2068270],
      [995539, 2082540],
      [482617, 1029990],
      [965114, 2020341],
      [318594, 740105],
      [170446, 517382],
      [366126, 803702],
      [481786, 1037223],
      [478161, 1023088],
      [176446, 429549],
      [436217, 943041],
      [885596, 1850935],
      [1018454, 2134964],
      [454071, 992414],
      [814843, 2156277],
    ],
  ],
  [
    2,
    [
      [324288, 720562],
      [1370920, 2844616],
      [187154, 719310],
      [1856730, 3837960],
      [252253, 579443],
      [908415, 1900494],
      [323378, 718772],
      [243027, 563171],
      [330717, 910023],
      [803279, 1686071],
      [824258, 1727129],
      [663499, 1404404],
      [1718486, 3516300],
      [1700238, 3474093],
      [468353, 1002503],
      [692910, 1473379],
      [476394, 1018853],
      [555076, 1175035],
      [386950, 844656],
      [1901342, 3919767],
    ],
  ],
  [
    3,
    [
      [622851, 1312959],
      [703670, 1503725],
      [1972307, 4092547],
      [1794518, 3678119],
      [738673, 1558919],
      [484996, 1034385],
      [682240, 1442663],
      [696380, 1475146],
      [347779, 767309],
      [1770974, 3625328],
      [576883, 2009986],
      [518266, 1101045],
      [301331, 732600],
      [712414, 1506673],
      [991257, 2247599],
      [582322, 1232330],
      [1399440, 2887153],
      [1329689, 2754642],
      [507745, 1185655],
      [700493, 1889620],
    ],
  ],
  [
    4,
    [
      [575053, 1263100],
      [1126349, 2353484],
      [1165592, 2431065],
      [1079446, 2258407],
      [856084, 1788654],
      [392965, 855472],
      [892380, 1899228],
      [885596, 1850932],
      [903657, 1886459],
      [1011935, 2118084],
      [173612, 419485],
      [934974, 1951977],
      [945846, 1975020],
      [910959, 1901086],
      [852341, 1781624],
      [1886709, 3885169],
      [790071, 1657972],
      [243027, 563159],
      [243027, 560760],
      [275645, 661574],
      [1875866, 3860341],
      [486123, 1793945],
      [474257, 1013111],
    ],
  ],
  [
    5,
    [
      [855073, 1793734],
      [804138, 1687935],
      [597543, 1263201],
      [509116, 1082725],
      [478782, 1022471],
      [1130043, 2360578],
      [671311, 2553927],
      [1199552, 2498025],
      [1823196, 3741072],
      [683086, 2787821],
      [349432, 770549],
      [726545, 1639717],
      [570859, 1209937],
      [1004086, 2107153],
      [1174224, 2449050],
      [1364787, 3222892],
      [205220, 484499],
      [1106738, 2313062],
      [1043481, 2181033],
      [352755, 777351],
    ],
  ],
  [
    6,
    [
      [1155667, 2499495],
      [861860, 3821977],
      [433032, 2512647],
      [1205913, 2724770],
      [560952, 1186108],
      [1100026, 2298688],
      [984642, 2060202],
      [778655, 1635387],
      [725533, 1531892],
      [1222586, 2542937],
      [1096829, 2291901],
      [1327306, 2749834],
      [1134477, 4111324],
      [796825, 1762775],
      [1169222, 2439286],
      [1465505, 3009945],
      [1673284, 3417919],
    ],
  ],
  [
    7,
    [
      [957913, 2005668],
      [754387, 1588273],
      [703670, 1863959],
      [650089, 2204535],
      [868870, 1816013],
      [591252, 1251232],
      [854280, 1785283],
      [828129, 1735169],
      [1100368, 2298902],
      [1292519, 2682426],
      [1147522, 2396114],
      [480479, 1026047],
      [890013, 1860459],
      [1127155, 2355051],
      [628571, 1330402],
      [1086072, 2476309],
      [1179382, 2459365],
      [1211012, 2520976],
      [1057129, 2209577],
      [989392, 2069683],
      [983584, 2058131],
    ],
  ],
  [
    8,
    [
      [969974, 2029217],
      [582322, 1232332],
      [1551290, 3170034],
      [835557, 2749657],
      [315311, 703074],
      [923032, 1927516],
      [1041444, 2176664],
      [1101711, 2301570],
      [858142, 1793444],
      [1158618, 2889384],
      [658054, 1393795],
      [460371, 985970],
      [452446, 970464],
      [819445, 1718084],
      [1743589, 3564434],
      [989392, 2069679],
      [1288739, 2675423],
      [955714, 1996491],
      [863577, 1806323],
    ],
  ],
  [
    9,
    [
      [904152, 1887434],
      [1151346, 2403291],
      [554055, 1173049],
      [1115887, 2331166],
      [835346, 1749595],
      [468353, 1001780],
      [828129, 1753420],
      [609482, 1287121],
      [827679, 1938167],
      [1126038, 2352787],
      [1160301, 2420924],
      [1340481, 2842251],
      [321347, 714878],
      [1017120, 2128859],
      [173612, 473228],
      [1577550, 3221172],
      [1233948, 2565111],
      [1130020, 2361941],
      [1527020, 3123873],
    ],
  ],
  [
    10,
    [
      [902012, 1915659],
      [948873, 1981525],
      [644943, 1366733],
      [935415, 1954334],
      [224173, 523391],
      [477233, 1076362],
      [335798, 756652],
      [292994, 659238],
      [1169645, 2440024],
      [1517419, 3106429],
      [1131252, 2362982],
      [1233317, 2563975],
      [1441898, 2966186],
      [1702864, 3479384],
      [1047374, 2192741],
      [520438, 1115521],
      [492000, 1048210],
      [1502865, 3079059],
      [1277458, 2661837],
      [975441, 2042536],
    ],
  ],
  [
    11,
    [
      [1169222, 2439291],
      [1191225, 2481989],
      [741473, 1564376],
      [1331028, 2758075],
      [1196122, 2491629],
      [1152721, 2412014],
      [352754, 777348],
      [493316, 1051627],
      [1631656, 3330685],
      [1319038, 2732611],
      [469962, 1004909],
      [516255, 1097111],
      [1872812, 3853669],
      [1606899, 3281144],
      [1525661, 3121483],
      [1199166, 2497240],
      [1043403, 2180890],
      [1149642, 2400064],
      [1178017, 3034669],
      [1557590, 3181821],
      [1599290, 3266309],
    ],
  ],
];

let currentLoadedSet = '';

function App() {
  const [loadedMaps, setLoadedMaps] = useState([]);
  const [loadedSet, setLoadedSet] = useState('');

  async function renderBeatmap(id) {
    if (currentLoadedSet !== '') {
      try {
        const response = await fetch(`https://api.chimu.moe/v1/map/${id}`);
        const data = await response.json();
        if (currentLoadedSet !== '') {
          console.log(data);
          setLoadedMaps((prevMaps) => [
            ...prevMaps,
            { ...data, key: data.BeatmapId },
          ]);
        }
      } catch (error) {
        setTimeout(() => renderBeatmap(id), 1000);
      }
    } else {
      console.log('set cleared');
    }
  }

  async function loadSet(set) {
    setLoadedMaps([]);
    setLoadedSet(set);
    currentLoadedSet = set;
  }

  useEffect(() => {
    if (loadedSet !== '') {
      maps[loadedSet][1].forEach((map, i) =>
        setTimeout(() => renderBeatmap(map[1]), i * 250)
      );
    }
  }, [loadedSet]);

  async function clearSet() {
    setLoadedSet('');
    setLoadedMaps([]);
    currentLoadedSet = '';
  }

  // renderBeatmap(map[1].toString())

  return (
    <>
      <Header />
      <BeatmapCollection
        maps={loadedMaps}
        mapList={maps}
        set={loadedSet}
        load={loadSet}
        clear={clearSet}
      />
    </>
  );
}

export default App;
